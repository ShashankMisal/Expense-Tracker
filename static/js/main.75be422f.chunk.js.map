{"version":3,"sources":["TakeExpense.js","ShowExpense.js","App.js","index.js"],"names":["TakeExpense","props","useState","amount","type","expenseType","setexpenseType","handleExpense","e","preventDefault","target","name","value","prev","id","min","placeholder","onChange","Tooltip","title","className","arrow","placement","Button","onClick","passExpense","alert","ShowExpense","style","marginLeft","deleteItem","App","addAllExpense","setaddAllExpense","catagory","setcatagory","total","setTotal","ondelete","Number","parseInt","filter","item","index","React","useEffect","expenses","localStorage","getItem","JSON","parse","setItem","stringify","totalAmount","fontSize","map","val","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75be422f.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nconst TakeExpense = (props) =>{\r\n\r\n\r\n    const [expenseType, setexpenseType] = useState({\r\n        amount:\"\",\r\n        type:\"\"\r\n    })\r\n\r\n\r\n\r\n    const handleExpense = (e)=>{\r\n            e.preventDefault();\r\n            const {name,value} = e.target\r\n\r\n\r\n            setexpenseType((prev)=>{\r\n                return {\r\n                    ...prev,\r\n                [name]: value        \r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const sendExpense = () =>{\r\n        if(expenseType.amount!== \"\" && expenseType.type !== \"\")\r\n        {\r\n                if(expenseType.amount>=0)\r\n                {\r\n                    props.passExpense(expenseType);\r\n                    setexpenseType({ amount:\"\",\r\n                    type:\"\"})\r\n                }\r\n                else\r\n                    alert(\"Please Enter Positive Amount\");\r\n                \r\n        }\r\n        else{\r\n            alert(\"Please Enter Amount and its Expense-Type!\");\r\n        }\r\n        \r\n    } \r\n\r\n\r\n    return (\r\n        <>\r\n        <div id=\"TakeExpense\">\r\n            \r\n                <input type=\"number\"  min=\"0\" id=\"amountInput\" placeholder=\"Enter Expense..\" value={expenseType.amount} name=\"amount\" onChange={handleExpense} />\r\n                \r\n                <select id=\"dropdown\"  name=\"type\" onChange={handleExpense} value={expenseType.type}>\r\n                    <option >SelectCatagory</option>\r\n                    <option value=\"Food\">Food</option>\r\n                    <option value=\"Travel\">Travel</option>\r\n                    <option value=\"Petrol\">Petrol</option>\r\n                </select>\r\n\r\n                <Tooltip title={<span className=\"tt\">Add Expense</span>} arrow placement=\"bottom\">\r\n                        <Button onClick={sendExpense} id=\"addBtn\">\r\n                            <AddCircleRoundedIcon id=\"addIconBtn\" />\r\n                            </Button>\r\n                   </Tooltip>         \r\n\r\n\r\n        </div>\r\n       \r\n        \r\n      </>\r\n    )\r\n}\r\n\r\nexport default TakeExpense","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nconst ShowExpense = (props) => {\r\n\r\n\r\n    const deleteExpense = () => {\r\n        props.deleteItem(props.id,props.amount);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n             <tr>\r\n                <td>{props.amount}</td>\r\n                <td>{props.type}</td>\r\n                <td>\r\n                <Tooltip title={<span className=\"tt\">Delete Expense</span>} arrow placement=\"left\">\r\n                    <Button className=\"btn\" style={{ marginLeft: \"10px\" }} onClick={deleteExpense}>\r\n                        < DeleteOutlineIcon  id=\"deleteIcon\"/>\r\n                    </Button>\r\n                </Tooltip>\r\n\r\n                </td>\r\n            </tr>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowExpense","import React, { useState } from 'react'\r\nimport TakeExpense from './TakeExpense'\r\nimport ShowExpense from './ShowExpense'\r\nimport Button from '@material-ui/core/Button';\r\nimport LayersClearIcon from '@material-ui/icons/LayersClear';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [addAllExpense, setaddAllExpense] = useState([]);\r\n\r\n  const [catagory, setcatagory] = useState(\"\");\r\n  \r\n  const [total, setTotal] = useState(0);\r\n\r\n\r\n\r\n  const ondelete = (id, amount) => {\r\n      \r\n    setTotal((prev) => {\r\n          return prev = (prev - Number.parseInt(amount))\r\n        })\r\n\r\n        setaddAllExpense((prev) =>\r\n          prev.filter((item, index) => {\r\n            return index !== id\r\n          })\r\n        )\r\n  }\r\n\r\n\r\n  const addExpense = (item) => {\r\n\r\n        setTotal((prev) => {\r\n          return (prev + Number.parseInt(item.amount))\r\n        })\r\n\r\n        setaddAllExpense((prev) => {\r\n          return [...prev, item];\r\n        })\r\n  }\r\n\r\n  const handleCatagory = (e) => {\r\n    const { value } = e.target\r\n    setcatagory(value)\r\n  }\r\n\r\n\r\n  const onClear = () =>{\r\n    setcatagory(\"\")\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    const expenses = localStorage.getItem(\"expenses\"); \r\n    if(expenses){\r\n      setaddAllExpense(JSON.parse(expenses));\r\n    }\r\n  },[]);\r\n\r\n\r\n  React.useEffect(()=>{\r\n    localStorage.setItem(\"expenses\",JSON.stringify(addAllExpense));\r\n  })\r\n\r\n  React.useEffect(()=>{\r\n    const totalAmount = localStorage.getItem(\"totalAmount\"); \r\n    if(totalAmount){\r\n      setTotal(JSON.parse(totalAmount));\r\n    }\r\n  },[]);\r\n\r\n\r\n  React.useEffect(()=>{\r\n    localStorage.setItem(\"totalAmount\",JSON.stringify(total));\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1 id=\"header\">Expense Tracker</h1>\r\n\r\n      <h2 id=\"totalExpense\">Total Expense : <span style={{fontSize:\"3.5rem\"}}>{total}</span></h2>\r\n\r\n      <TakeExpense passExpense={addExpense} />\r\n\r\n\r\n      \r\n\r\n      <div className=\"selectCat\"> \r\n            <select name=\"cat\" id=\"dropdown2\"  onChange={handleCatagory} value={catagory}>\r\n              <option value=\"\">SelectCatagory</option>\r\n              <option value=\"Food\">FOOD</option>\r\n              <option value=\"Travel\">Travel</option>\r\n              <option value=\"Petrol\">Petrol</option>\r\n            </select>\r\n            <Tooltip title={<span className=\"tt\">Clear Catagory</span>} arrow placement=\"bottom\">\r\n              <Button onClick={onClear} className=\"btn\">\r\n                <LayersClearIcon id=\"clearIcon\"/>  \r\n              </Button>\r\n            </Tooltip>\r\n      </div>\r\n\r\n\r\n      <div id=\"expenseList\">\r\n          <table>\r\n              <tr>\r\n                <th>AMOUNT</th>\r\n                <th>TYPE</th>\r\n                <th></th>\r\n              </tr>\r\n\r\n              {\r\n                    addAllExpense.map((val, index) => {\r\n                      \r\n                        if (val.type === catagory) {\r\n                              return <ShowExpense\r\n                              amount={val.amount}\r\n                              type={val.type}\r\n                              key={index}\r\n                              id={index}\r\n                              deleteItem={ondelete}\r\n                              />\r\n                        }\r\n                        else if(catagory===\"\") {\r\n                          return <ShowExpense\r\n                              amount={val.amount}\r\n                              type={val.type}\r\n                              key={index}\r\n                              id={index}\r\n                              deleteItem={ondelete}/>\r\n                        }else\r\n                        return \"\"\r\n                    })   \r\n              }\r\n          </table>\r\n\r\n      </div>\r\n\r\n\r\n      <p id=\"footer\">Made With REACT</p>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}